; f_PWM = 62.500
; f_CLK = 16.000.000
; TOP = 255 (8 bit)
; N = f_CLK / (f_PWM * (TOP + 1)) = 1

.def temp = r20
.def DC_VALUE = r23

.org 0x0000

OCR1A_table:
.db 5, 25, 45, 65, 86, 107, 128, 149, 170, 191, 212, 223, 234, 250
;   0	1   2	3   4	5    6	  7    8    9	 10   11   12	13

rjmp reset

; (COM1A0, COM1A1) = (0, 1)
; (WGM13, WGM12, WGM11, WGM10) = (0, 1, 0, 1)

reset:
    
    ; stack init
    ldi temp, low(RAMEND)
    out SPL, temp
    ldi temp, high(RAMEND)
    out SPH, temp
    
    ; TCCR1A init
    ldi temp, (1<<COM1A1) | (1<<WGM10)
    sts TCCR1A, temp
    
    ; TCCR1B init
    ldi temp, (1<<WGM12) | (1<<CS10)
    sts TCCR1B, temp
    
    ; OCR1A init => Duty Cycle = 128
    ldi DC_VALUE, 128
    sts OCR1AL, DC_VALUE
    
    ; PD3, PD4 input pins
    cbi DDRD, PIND3
    cbi DDRD, PIND4

    ; activate pullup resistors
    sbi PORTD, PIND3
    sbi PORTD, PIND4

    ; init Z to reset middle of OCR1A_table
    ldi ZL, low(OCR1A_table+6)
    ldi ZH, high(OCR1A_table+6)

; main program
main:
    ; read portD
    in temp, PORTD
    
    ; filter temp register
    andi temp, (1<<PIND3) | (1<<PIND4)

    ; if PD3 = ON then go to ON_PD3
    sbrc temp, 4
    rjmp ON_PD3
    
    ; if PD4 = ON then go to ON_PD4
    sbrc temp, 5
    rjmp ON_PD4
    
    ; else return to the main program
ret_main:
    rjmp main

ON_PD3:
    
    ; compare DC_VALUE with 250 = 98%
    cpi DC_VALUE, 250
    
    ; if DC_VALUE = 250 then return to the main program
    breq ret_main
    
    ; else increment by 1 the z register
    inc ZL
	adc ZH, r0
    
    ; update the DC_VALUE register
    ld DC_VALUE, Z
    
    ; store the new  DC_VALUE value to the OCR1AL register
    sts OCR1AL, DC_VALUE
    
    ; return to the main program
    rjmp main
    
ON_PD4:
    
    ; compare DC_VALUE with 5 = 2%
    cpi DC_VALUE, 5
    
    ; if DC_VALUE = 2 then return to the main program
    breq ret_main
    
    ; else increment by 1 the z register
    inc ZL
	adc ZH, r0
    
    ; update the DC_VALUE register
    ld DC_VALUE, Z
    
    ; store the new  DC_VALUE value to the OCR1AL register
    sts OCR1AL, DC_VALUE
    
    ; return to the main program
    rjmp main
