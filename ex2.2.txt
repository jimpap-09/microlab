
; exercise2.2.asm

.include "m328PBdef.inc"

.equ FOSC_MHZ=16				; f = 16MHz
.equ DEL_ms=2000				; delay = 2000 ms = 2 sec
.equ DEL_NU=FOSC_MHZ*DEL_ms		; del_cycles = 16*2000*1000
.def counter=r22
.def temp=r23

.org 0x0
rjmp reset
.org 0x2	; INT0 : ADDRESS (ISR0)
rjmp ISR0

reset:
    ;Init Stack Pointer
    ldi r24, low(RAMEND)
    out SPL, r24
    ldi r24, high(RAMEND)
    out SPH, r24

    ;Interrupt on rising edge of INT0 pin
	; r24 = 0b00000000
    ldi r24, (0 << ISC01) | (0 << ISC00)	
    sts EICRA, r24

    ldi r24, (1 << INT0)		; r24 = 0b00000001
    out EIMSK, r24				; INT0 : ENABLED (PD2)
    
    sei							; Set Global Interrupt Flag

    ser r26						; r26 = 1
    out DDRC, r26				; PORTC : OUTPUT
    
    clr r26						; r26 = 0
    out DDRB, r26				; PORTB : INPUT
    ldi r26, 0x0F				; r26 = 0b00001111
    out PORTB, r26				; PINB(0-3) : active-low

loop1:
    clr r26						; init r26 = 0
loop2:
    out PORTC, r26				; PORTC <- r26

    ldi r24, low(DEL_NU)
    ldi r25, high(DEL_NU)
    rcall delay_ms				; delay for 2 seconds
    
    inc r26						; r26 += 1

    ;Compare r26 with 32
    cpi r26, 32					; ? r26 = 32
    breq loop1					;	PC <- loop1
    rjmp loop2					; : PC <- loop2
    
;Delay of 1000*F1+6 ~ 1000*F1 cycles
delay_ms:
    ldi r23, 249				; 1 cycle
loop_inn:						; 1+(249*4-1) = 996 cycles
    dec r23						; 1 cycle
    nop							; 1 cycle
    brne loop_inn				; 1 or 2 cycles

    sbiw r24,1					; 2 cycles
    brne delay_ms				; 1 or 2 cycles

    ret							; 4 cycles

ISR0:
    in temp, SREG				; Save SREG

    push temp
	push r24
	push r25

	ldi r24, low(5)
	ldi r25, high(5)
	rcall delay_ms				; delay for 5ms

	sbic EIFR, INT0				; overcome btn bouncing
	sbi EIFR, INT0

	in temp, PINB				; temp <- input (active-low)
	com temp					; temp <- temp' (1 <- 0)
	andi temp, 0x0F				; filter for PINB(0-3)

    clr counter					; reset counter

	; counter = Sum(temp(i)) : 0 <= i <= 3
	; for each 1, inc counter
	sbrc temp, 0				; check PINB0
	inc counter
	sbrc temp, 1				; check PINB1
	inc counter
	sbrc temp, 2				; check PINB2
	inc counter
	sbrc temp, 3				; check PINB3
	inc counter

	; max(counter) = 4
	ldi temp, 0					; counter = 0 =>
	cpi counter, 0				; temp = 0b00000000
	brne display

	ldi temp, 1					; counter = 1 =>
	cpi counter, 1				; temp = 0b00000001
	brne display

	ldi temp, 3					; counter = 2 =>
	cpi counter, 2				; temp = 0b00000011
	brne display

	ldi temp, 7					; counter = 3 =>
	cpi counter, 3				; temp = 0b00000111
	brne display

	ldi temp, 15				; counter = 4 =>
								; temp = 0b00001111

 display:
    out PORTC, temp				; PORTC <- temp

	ldi r24, low(DEL_NU)
	ldi r25, high(DEL_NU)
	rcall delay_ms				; delay for 2 seconds

	;pop back sreg, delay registers
	pop r25
	pop r24
	pop temp
	out SREG, temp

	reti
